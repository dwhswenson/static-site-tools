name: Upload Hugo site to staging

on:
  workflow_run:
    workflows: ["Build Hugo site from PR"]
    types:
      - completed

jobs:
  get-metadata:
    if: ${{ github.repository == vars.MAIN_REPO }}
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.pr-metadata.outputs.pr-number || steps.backup-metadata.outputs.pr-number }}
      pr_headsha: ${{ steps.pr-metadata.outputs.pr-headsha || steps.backup-metadata.outputs.pr-headsha }}

    steps:
      - name: Get PR metadata from action
        #if: ${{ github.event_name == 'workflow_run' }}
        id: pr-metadata
        uses: omsf/static-site-tools/pr-info-from-workflow-run@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Backup metadata for testing
        id: backup-metadata
        if: ${{
          github.repository == vars.MAIN_REPO
          && contains(fromJSON('["schedule", "workflow_dispatch"]'), github.event_name)
        }}
        shell: bash
        run: |
          echo "pr-headsha=test" | tee -a "$GITHUB_OUTPUT"
          echo "pr-number=-1" | tee -a "$GITHUB_OUTPUT"

  stage:
    if: ${{ (github.event.workflow_run.conclusion == 'success') && (github.repository == vars.MAIN_REPO) }}
    needs: get-metadata
    uses: omsf/static-site-tools/.github/workflows/stage-cloudflare.yaml@main
    permissions:
      statuses: write
      pull-requests: write
    with:
      run-id: ${{ github.event.workflow_run.id }}
      pr-number: ${{ fromJSON(needs.get-metadata.outputs.pr_number) }}  # convert to int
      pr-headsha: ${{ needs.get-metadata.outputs.pr_headsha }}
      project-name: ${{ vars.CLOUDFLARE_PROJECT_NAME }}
      html-dir: ${{ vars.HUGO_OUTPUT_DIR || 'public' }}
      label: Hugo site
    secrets:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
