name: Extract PR information from a workflow run event
description: >
  When a workflow_run workflow is triggered by a workflow that was, in turn,
  triggered by a pull request, sometimes you need the detailed information
  about the pull request. This action extracts the PR information from the
  workflow run event and sets it as output variables.


inputs:
  github-token:
    description: 'The GitHub token to use for API requests.'
    required: true
    default: ${{ github.token }}

outputs:
  pr-number:
    description: The number of the pull request.
    value: ${{ steps.extract.outputs.pr-number }}
  pr-headsha:
    description: The head SHA of the pull request.
    value: ${{ steps.extract.outputs.pr-headsha }}
  #pr-title:
    #description: The title of the pull request.
    #value: ${{ steps.extract.outputs.pr-title }}
  #pr-body:
    #description: The body of the pull request.
    #value: ${{ steps.extract.outputs.pr-body }}
  #pr-author:
    #description: The author of the pull request.
    #value: ${{ steps.extract.outputs.pr-author }}

runs:
  using: 'composite'
  steps:
    - name: Extract PR metadata
      shell: bash
      id: extract
      run: |
        HEAD_SHA=$(jq -r '.workflow_run.head_commit.id' "$GITHUB_EVENT_PATH")
        echo "pr-headsha=$HEAD_SHA" | tee -a "$GITHUB_OUTPUT"

        IFS='/' read -r OWNER REPO <<< "$GITHUB_REPOSITORY"
        echo $OWNER
        echo $REPO

        read -r -d '' GRAPHQL_QUERY <<EOF
        {
          "query": "query({ repository(owner: \$owner, name: \$name) { pullRequests(first: 100, states: [OPEN], orderBy: { field: UPDATED_AT, direction: DESC }) { nodes { number headRefOid } } } }",
          "variables": {
            "owner": "$OWNER",
            "name": "$REPO"
          }
        }
        EOF

        echo $GRAPHQL_QUERY

        RESPONSE=$(curl -s -X POST https://api.github.com/graphql \
          -H "Authorization: bearer ${GITHUB_TOKEN}" \
          -H "Content-Type: application/json" \
          --data "$GRAPHQL_QUERY")

        echo $RESPONSE

        MATCHING_PRS=$(echo "$RESPONSE" | jq --arg sha "$HEAD_SHA" '.data.repository.pullRequests.nodes | map(select(.headRefOid == $sha))')
        echo $MATCHING_PRS
        COUNT=$(echo "$MATCHING_PRS" | jq 'length')

        if [ "$COUNT" -eq 0 ]; then
          echo "No pull request found associated with HEAD_SHA: ${HEAD_SHA}" >&2
          exit 1
        elif [ "$COUNT" -eq 1 ]; then
          PR_NUMBER=$(echo "$MATCHING_PRS" | jq -r '.[0].number')
          echo "pr-number=$PR_NUMBER" | tee -a "$GITHUB_OUTPUT"
        else
          echo "Error: Multiple pull requests found with HEAD_SHA ${HEAD_SHA}. Unable to determine the correct PR." >&2
          exit 1
        fi
